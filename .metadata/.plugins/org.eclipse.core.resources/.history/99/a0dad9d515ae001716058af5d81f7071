import java.util.ArrayList;

public class TreeConstructor {
	
//	INSTANCE VARIABLES
//	root node
	private Node root;
	
	
//	PUBLIC CONSTRUCTORS
	
//	h = height
//	b = branching factor
//	a = approximately
	public TreeConstructor(int h, int b, int a) {
//		if interior node
		if (h > 1) {
//			t set to random value between -2500 and 2500
			int t = (int)(Math.random()*5000-2500);
//			e is t + value between -approx and approx
			int error = (int)(Math.random()*a*2-a);
//			create root node
			root = new Node(t+error);
//			create daughters
			
		}
//		if leaf node
		if (h == 1) {
//			t set to random value between -2500 and 2500
			int t = (int)(Math.random()*5000-2500);
//			create root node
			root = new Node(t);
		}
	}
	
//	h = height
//	b = branching factor
//	a = approximately
//	t = true value
	public TreeConstructor(int h, int b, int a, int t) {
//		if interior node
		if (h > 1) {
//			t set to random value between -2500 and 2500
			int t = (int)(Math.random()*5000-2500);
//			e is t + value between -approx and approx
			int error = (int)(Math.random()*a*2-a);
//			create root node
			root = new Node(t+error);
			
//			create daughters
		}
//		if leaf node
		if (h == 1) {
//			t set to random value between -2500 and 2500
			int t = (int)(Math.random()*5000-2500);
//			create root node
			root = new Node(t);
		}
	}
	
	
//	ACCESSOR METHODS
//	get root node
	public Node getRoot(){
		return root;
	}
}
